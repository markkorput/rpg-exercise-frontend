// Generated by CoffeeScript 1.6.3
(function() {
  var GameView, GamesIndexLineView, GamesIndexView, UserView, _ref, _ref1, _ref2, _ref3, _ref4,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.AdminView = (function(_super) {
    __extends(AdminView, _super);

    function AdminView() {
      _ref = AdminView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    AdminView.prototype.initialize = function() {
      var _this = this;
      this.game_list = new GameList();
      this.game_list.fetch();
      this.games_index_view = new GamesIndexView({
        model: this.game_list
      });
      this.render();
      return this.games_index_view.on('open', function(game) {
        var game_view;
        _this.games_index_view.$el.hide();
        game_view = new GameView({
          model: game
        });
        _this.$el.append(game_view.el);
        return game_view.on('close', (function() {
          game_view.remove();
          return this.games_index_view.$el.show();
        }), _this);
      });
    };

    AdminView.prototype.render = function() {
      this.$el.html('<h2>Games</h2>');
      return this.$el.append(this.games_index_view.el);
    };

    return AdminView;

  })(Backbone.View);

  GamesIndexView = (function(_super) {
    __extends(GamesIndexView, _super);

    function GamesIndexView() {
      _ref1 = GamesIndexView.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    GamesIndexView.prototype.tagName = 'table';

    GamesIndexView.prototype.className = 'games-index';

    GamesIndexView.prototype.initialize = function() {
      this.game_list = this.model;
      return this.render();
    };

    GamesIndexView.prototype.render = function() {
      var bodyEl,
        _this = this;
      this.$el.html('');
      this.$el.append('<thead><tr><td>Creation Date</td><td>&nbsp;</td></tr></thead>');
      this.$el.append(bodyEl = $('<tbody></tbody>'));
      return this.game_list.each(function(game) {
        var view;
        view = new GamesIndexLineView({
          model: game
        });
        bodyEl.append(view.el);
        return view.on('open', (function(game) {
          return this.trigger('open', game);
        }), _this);
      });
    };

    return GamesIndexView;

  })(Backbone.View);

  GamesIndexLineView = (function(_super) {
    __extends(GamesIndexLineView, _super);

    function GamesIndexLineView() {
      _ref2 = GamesIndexLineView.__super__.constructor.apply(this, arguments);
      return _ref2;
    }

    GamesIndexLineView.prototype.tagName = 'tr';

    GamesIndexLineView.prototype.events = {
      'click .open': 'open',
      'click .delete': 'del'
    };

    GamesIndexLineView.prototype.initialize = function() {
      this.render();
      return this.model.on('destroy', (function() {
        return this.remove();
      }), this);
    };

    GamesIndexLineView.prototype.render = function() {
      this.$el.html('');
      this.$el.append('<td><a href="#" class="open">' + this.model.get('created_at') + '</a></td>');
      return this.$el.append('<td><a href="#" class="delete">delete</a></td>');
    };

    GamesIndexLineView.prototype.open = function(e) {
      e.preventDefault();
      return this.trigger('open', this.model);
    };

    GamesIndexLineView.prototype.del = function(e) {
      e.preventDefault();
      return this.model.destroy();
    };

    return GamesIndexLineView;

  })(Backbone.View);

  GameView = (function(_super) {
    __extends(GameView, _super);

    function GameView() {
      _ref3 = GameView.__super__.constructor.apply(this, arguments);
      return _ref3;
    }

    GameView.prototype.tagName = 'div';

    GameView.prototype.className = 'game-details';

    GameView.prototype.events = {
      'click .close': 'close'
    };

    GameView.prototype.initialize = function() {
      this.user_view = new UserView({
        model: this.model.user
      });
      this.render();
      return this.model.on('destroy', (function() {
        this.remove();
        return this.trigger('close');
      }), this);
    };

    GameView.prototype.render = function() {
      console.log(this.model);
      this.$el.html('');
      this.$el.append('<a href="#" class="close">close</a> | <a href="#" class="play">play</a><br/>');
      this.$el.append('Creation date: ' + this.model.get('created_at') + '<br/>');
      this.$el.append('User id: ' + this.model.get('user_id') + '<br/>');
      this.$el.append('<h1>User</h1>');
      return this.$el.append(this.user_view.el);
    };

    GameView.prototype.close = function() {
      return this.trigger('close');
    };

    return GameView;

  })(Backbone.View);

  UserView = (function(_super) {
    __extends(UserView, _super);

    function UserView() {
      _ref4 = UserView.__super__.constructor.apply(this, arguments);
      return _ref4;
    }

    UserView.prototype.tagName = 'div';

    UserView.prototype.className = 'user-details';

    UserView.prototype.initialize = function() {
      return this.render();
    };

    UserView.prototype.render = function() {
      this.$el.html('');
      if (!this.model) {
        return;
      }
      console.log(this.model.attributes);
      this.$el.append('Name: ' + this.model.get('name') + '<br/>');
      return this.$el.append('Skills: ' + this.model.get('skillSummary'));
    };

    return UserView;

  })(Backbone.View);

}).call(this);
